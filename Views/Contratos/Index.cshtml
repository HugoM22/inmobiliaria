@model IEnumerable<Inmobiliaria1.Models.Contrato>
@using Inmobiliaria1.Models

@{
    ViewData["Title"] = "Index";
    string EstadoBadge(EstadoContrato e) => e switch
    {
        EstadoContrato.Vigente    => "badge bg-success",
        EstadoContrato.Borrador   => "badge bg-secondary",
        EstadoContrato.Finalizado => "badge bg-dark",
        EstadoContrato.Rescindido => "badge bg-danger",
        _ => "badge bg-light text-dark"
    };
}

<h1>Index</h1>
<p><a asp-action="Create">Create New</a></p>

@if (Model == null || !Model.Any())
{
    <div class="alert alert-info">No hay contratos.</div>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Inquilino</th>
                <th>Inmueble</th>
                <th>FechaInicio</th>
                <th>FechaFin</th>
                <th>Estado</th>
                <th class="text-end">MontoMensual</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
        @foreach (var c in Model)
        {
            var inq = c.Inquilino != null ? $"{c.Inquilino.Apellido}, {c.Inquilino.Nombre}" : $"(Id: {c.InquilinoId})";
            var inm = c.Inmueble  != null ? c.Inmueble.Direccion : $"(Id: {c.InmuebleId})";
            <tr>
                <td>@inq</td>
                <td>@inm</td>
                <td>@c.FechaInicio.ToString("dd/MM/yyyy")</td>
                <td>@c.FechaFin.ToString("dd/MM/yyyy")</td>
                <td><span class="@EstadoBadge(c.Estado)">@c.Estado</span></td>
                <td class="text-end">@string.Format("{0:N2}", c.MontoMesual)</td>
                <td class="text-nowrap">
                    <a asp-action="Edit" asp-route-id="@c.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@c.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@c.Id">Delete</a>
                </td>
            </tr>
        }
        </tbody>
    </table>
}



